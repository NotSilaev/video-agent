import sys
sys.path.append('../') # src/

from logs import addLog
from telegram.api import sendRequest as sendTelegramAPIRequest

import traceback
import functools


def exceptions_catcher(): 
    """Catches all the exceptions in functions.
    If exception is noticed, it adds a new note to a logfile 
    and sends a telegram message for user about unsuccessful request.
    """

    def container(func):
        @functools.wraps(func)
        async def wrapper(*args, **kwargs):
            try:
                user_id = args[0].from_user.id
            except (IndexError, AttributeError):
                user_id = None

            try:
                result = await func(*args, **kwargs)
            except Exception as e:
                log_text = f'{e}\n\n{traceback.format_exc()}'
                addLog(level='error', text=log_text)

                if user_id:
                    message_text = (
                        '*‚ùå –í–æ –≤—Ä–µ–º—è –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞.*\n\n'
                        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è - –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.\n\n'
                        '*üôè –ü—Ä–∏–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–µ–Ω–µ–Ω–∏—è –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.*'
                    )

                    sendTelegramAPIRequest(
                        request_method='POST',
                        api_method='sendMessage',
                        parameters={
                            'chat_id': user_id,
                            'text': message_text,
                            'parse_mode': 'Markdown',
                        },
                    )
        return wrapper
    return container
